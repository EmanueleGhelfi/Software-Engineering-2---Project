#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection
Component Interfaces
\end_layout

\begin_layout Standard
Components provide some interfaces through which it's possible to other
 components to use the services provided.
\begin_inset Newline newline
\end_inset

Some interfaces are protected and are accessible only to specific components.
 
\begin_inset Newline newline
\end_inset

Here is the list of components and their interfaces.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $\mathbf{Registration}$
\end_inset

 
\begin_inset Formula $\mathbf{Manager}$
\end_inset

:
\end_layout

\begin_layout Itemize
doRegistration(username, password, paymentInformation, driveLicense): creates
 a new user if possible.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Reservation}$
\end_inset

 
\begin_inset Formula $\mathbf{Manager}$
\end_inset

:
\end_layout

\begin_layout Itemize
doReservation(userId, reservationInfo): creates a new reservation and starts
 the timer.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Ride}$
\end_inset

 
\begin_inset Formula $\mathbf{Manager}$
\end_inset

:
\end_layout

\begin_layout Itemize
unlockRequest(userId, carId, userPosition): calls unlock interface provided
 by Car Proxy
\end_layout

\begin_layout Itemize
lockRequest(userId, carId): the same as before.
\end_layout

\begin_layout Itemize
startRide(ride): called when the user wants to start a ride.
\end_layout

\begin_layout Itemize
pauseRide(ride): called when the user wants to pause a ride.
\end_layout

\begin_layout Itemize
terminateRide(ride): called when the user wants to terminate a ride.
\end_layout

\begin_layout Itemize
rideInit(ride): called by Reservation Manager when the user creates the
 ride.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Profile}$
\end_inset

 
\begin_inset Formula $\mathbf{Manager}$
\end_inset

:
\end_layout

\begin_layout Itemize
getProfileInfo(userId): returns the profile information associated to userId.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Customer}$
\end_inset

 
\begin_inset Formula $\mathbf{Message}$
\end_inset

 
\begin_inset Formula $\mathbf{Handler}$
\end_inset

:
\end_layout

\begin_layout Itemize
sendCommunication(communication): called when the user wants to send a communica
tion regarding malfunctions or damages to the system.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Authentication}$
\end_inset

 
\begin_inset Formula $\mathbf{Manager}$
\end_inset


\end_layout

\begin_layout Itemize
doLogin(username, password): manages login and sessions.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Notification}$
\end_inset

 
\begin_inset Formula $\mathbf{Manager}$
\end_inset


\end_layout

\begin_layout Itemize
sendNotification(notificationInfo, notificationType, receiver): sends a
 notification of type notificationType with the content notificationInfo.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Car}$
\end_inset

 
\begin_inset Formula $\mathbf{Search}$
\end_inset

 
\begin_inset Formula $\mathbf{Engine}$
\end_inset


\end_layout

\begin_layout Itemize
searchCars(position, radius): searches for cars near the position.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Car}$
\end_inset

 
\begin_inset Formula $\mathbf{Manager}$
\end_inset


\end_layout

\begin_layout Itemize
setCarStatus(carId, status): set the status of car
\end_layout

\begin_layout Itemize
getCarStatus(carId): get the status of the car ( i.e.
 available, busy)
\end_layout

\begin_layout Itemize
unlockCar(carId)
\end_layout

\begin_layout Itemize
lockCar(userId)
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Administrative}$
\end_inset

 
\begin_inset Formula $\mathbf{Functionality}$
\end_inset

 
\begin_inset Formula $\mathbf{Provider}$
\end_inset


\end_layout

\begin_layout Itemize
addSafeArea(position, safeAreaType): adds a safe area.
 SafeAreaType stands for simple safe area or charging area.
\end_layout

\begin_layout Itemize
deleteSafeArea(safeAreaId)
\end_layout

\begin_layout Itemize
addOperator(username, password, competenceArea)
\end_layout

\begin_layout Itemize
deleteOperator(username, password)
\end_layout

\begin_layout Itemize
addAdmin(username, password)
\end_layout

\begin_layout Itemize
deleteAdmin(username, password)
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Car}$
\end_inset

 
\begin_inset Formula $\mathbf{Monitoring}$
\end_inset

: it doesn't provide any interface to other components.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $\mathbf{Car}$
\end_inset

 
\begin_inset Formula $\mathbf{Proxy}$
\end_inset

:
\end_layout

\begin_layout Itemize
lockCar(carId)
\end_layout

\begin_layout Itemize
unlockCar(carId)
\end_layout

\begin_layout Itemize
getCarStatus(carId)
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Payment}$
\end_inset

 
\begin_inset Formula $\mathbf{Manager}$
\end_inset

:
\end_layout

\begin_layout Itemize
doPayment(paymentInformation, price): it calls the external payment API
 in order to complete the payment.
\end_layout

\begin_layout Itemize
verifyValidity(paymentInformation): it calls the external payment API to
 check if the information are valid.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Notification}$
\end_inset

 
\begin_inset Formula $\mathbf{Receiver}$
\end_inset

: this interface is provided by both Web Application and Mobile application
 in order to receive notifications.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $\mathbf{Car}$
\end_inset

 
\begin_inset Formula $\mathbf{Listener}$
\end_inset

:
\end_layout

\begin_layout Itemize
startEngineCallback(carId): called by the carOS when the engine starts.
 It's a callback method in order to be informed by important event of the
 car.
\end_layout

\begin_layout Itemize
stopEngineCallback(carId): the same as above.
\end_layout

\end_body
\end_document
