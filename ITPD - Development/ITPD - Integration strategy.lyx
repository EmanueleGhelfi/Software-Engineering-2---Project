#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Integration Strategy
\end_layout

\begin_layout Subsection
Entry Criteria
\end_layout

\begin_layout Standard
Entry criteria are used to determine when integration testing activity should
 start.
 Criteria are necessary conditions on the project status in order to start
 integration testing.
\end_layout

\begin_layout Standard
The Entry Criteria for Power EnJoy integration test are the following:
\end_layout

\begin_layout Enumerate
Unit testing must have been performed 
\begin_inset CommandInset label
LatexCommand label
name "enu:Unit-testing"

\end_inset


\end_layout

\begin_layout Enumerate
Environment for integration testing is complete.
\begin_inset CommandInset label
LatexCommand label
name "enu:Environment"

\end_inset


\end_layout

\begin_layout Enumerate
All previous documents have been released (RASD and DD).
\begin_inset CommandInset label
LatexCommand label
name "enu:All-previous-documents"

\end_inset


\end_layout

\begin_layout Enumerate
For each integration the sub-integrations must have been correctly tested.
 
\begin_inset CommandInset label
LatexCommand label
name "enu:For-each-integration"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Point 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Unit-testing"

\end_inset

 is because there is the need to be sure that sub-modules are internally
 correct before trying to integrate them.
 In this way bugs can only derive from interactions between sub-modules.
\end_layout

\begin_layout Standard
Point 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Environment"

\end_inset

 is because before integration testing there is the need to have all required
 data source that will be find in the production environment.
 In this way testing will be efficient and effective.
 Integration testing need also Tools and Test Equipment specified in section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tools-and-Test"

\end_inset

.
\end_layout

\begin_layout Standard
Point 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:All-previous-documents"

\end_inset

 is because all the requirements of the software to be need to be specified
 (from RASD).
 Also modules and their interactions in order to fulfill requirements need
 to be stated (from DD).
 
\end_layout

\begin_layout Standard
Point 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:For-each-integration"

\end_inset

 means that if a test involves the integration of component A with component
 B (when A depends on B), the last must have been correctly integrated with
 all its dependencies before starting the integration test.
 This is due to the bottom-up approach selected later (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Integration-Testing-Strategy"

\end_inset

).
\end_layout

\begin_layout Standard
Before a specific integration test can begin the following things must have
 been delivered:
\end_layout

\begin_layout Itemize
Input Data that cover all test cases.
\end_layout

\begin_layout Itemize
Target Data (desired output for the Input Data).
\end_layout

\begin_layout Itemize
Drivers/stubs (if necessary).
\end_layout

\begin_layout Itemize
System status (involves DB status and components status).
\end_layout

\begin_layout Subsection
Elements to be integrated
\begin_inset CommandInset label
LatexCommand label
name "subsec:Elements-to-be"

\end_inset


\end_layout

\begin_layout Standard
This subsection refers to component described in the DD and explain which
 components need to be integrated in order to have the complete Power EnJoy
 system.
\end_layout

\begin_layout Standard
In the system to be there are some components (high level components) that
 rely on lower lever components.
 
\end_layout

\begin_layout Standard
The latter are shared among different subsystems in a way to offer the same
 functionality to all components.
 The elements to be integrated in to ensure functionalities of our system
 are overlapping because of the software architecture of the system.
 
\end_layout

\begin_layout Standard
This is not a problem and the components with the highest fan-in of dependencies
 are the most critical of the system so they need to be tested with several
 components.
 
\end_layout

\begin_layout Standard
Here are listed all groups of components that need to be integrated with
 the related function:
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Car}$
\end_inset

 
\begin_inset Formula $\mathbf{Communication}$
\end_inset

: includes Car Proxy, CarOS and Car Listener component of Ride Manager.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Registration}$
\end_inset

 
\begin_inset Formula $\mathbf{Functionality}$
\end_inset

: includes Registration Manager and Payment manager.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Reservation}$
\end_inset

 
\begin_inset Formula $\mathbf{Functionality}$
\end_inset

: includes the Reservation Manager and the Ride Manager.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Ride}$
\end_inset

 
\begin_inset Formula $\mathbf{Functionality}$
\end_inset

: includes Ride Manager, Payment Manager and Car Communication.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Search}$
\end_inset

 
\begin_inset Formula $\mathbf{Functionality}$
\end_inset

: includes Car Search Engine and Car Communication.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Car}$
\end_inset

 
\begin_inset Formula $\mathbf{Management}$
\end_inset

 
\begin_inset Formula $\mathbf{Functionality}$
\end_inset

: includes Car Manager and Car Communication.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Notification}$
\end_inset

 
\begin_inset Formula $\mathbf{Functionality}$
\end_inset

: includes Notification Manager and Notification Receiver.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Monitoring}$
\end_inset

 
\begin_inset Formula $\mathbf{Functionality}$
\end_inset

: includes Car Monitoring, Car Communication and Notification Functionality.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{Customer}$
\end_inset

 
\begin_inset Formula $\mathbf{Communication}$
\end_inset

: includes Customer Message Handler and Notification Functionality.
 
\end_layout

\begin_layout Standard
Other components are 
\begin_inset Formula $\mathbf{Administrative}$
\end_inset

 
\begin_inset Formula $\mathbf{Functionality}$
\end_inset

 
\begin_inset Formula $\mathbf{Provider}$
\end_inset

, 
\begin_inset Formula $\mathbf{Profile}$
\end_inset

 
\begin_inset Formula $\mathbf{Manager}$
\end_inset

 and 
\begin_inset Formula $\mathbf{Authentication}$
\end_inset

 
\begin_inset Formula $\mathbf{Manager}$
\end_inset

, these components do not depend on other components and for them integration
 it's only with respect to the entire system.
 They are autonomous and atomic components.
\end_layout

\begin_layout Standard
Notice that all components rely on the Data Model that relies on the DBMS
 API offered by the DBMS.
 
\end_layout

\begin_layout Standard
All components listed below needs to be integrated together in order to
 obtain the 
\begin_inset Formula $\mathbf{Application}$
\end_inset

 
\begin_inset Formula $\mathbf{Server}$
\end_inset

 Subsystem.
 
\end_layout

\begin_layout Standard
The last step is to integrate all client components (Mobile and Web App)
 together with the Application Server.
\end_layout

\begin_layout Standard
After all the integrations the system is complete.
\end_layout

\begin_layout Subsection
Integration Testing Strategy
\begin_inset CommandInset label
LatexCommand label
name "subsec:Integration-Testing-Strategy"

\end_inset


\end_layout

\begin_layout Standard
The integration testing strategy used in this project is a mixture of critical-m
odule-first and bottom-up.
 
\end_layout

\begin_layout Standard
Integration testing and build plan are strictly related so the development
 should also follow these approaches.
 
\end_layout

\begin_layout Subsubsection*
Critical-Module-First Rationale
\end_layout

\begin_layout Standard
Critical Module First is the strategy used to support the integration of
 higher level subsystems .
 Since higher level subsystem are independent one from the other there isn't
 an established precedence ordering.
 Critical Module First has been selected because in this way riskiest component
 are developed first and tested first.
 Riskiest components are components with important or complex functionalities
 and components with the highest fan-in.
 An error or a malfunction in these components will compromise all the software
 to be.
 These malfunctions need to be discovered (and corrected) as soon as possible
 so these components have to be tested a lot.
 
\end_layout

\begin_layout Subsubsection*
Bottom-up Rationale
\end_layout

\begin_layout Standard
Bottom Up approach is used internally with respect to subsystems.
 In this way the the integration proceed from lower level subcomponents.
 By doing this there is the possibility to test component's behavior in
 early stage of development and improve parallelism and efficiency.
 Bottom-up approach requires the development of drivers for higher level
 components not yet developed.
 
\end_layout

\begin_layout Standard
The decision to write drivers instead of stub is because, in practical scenarios
, behavior of stubs is not that simple as it seems.
 The called module, most of the time involves complex business logic like
 connecting to a database.
 As a result creating Stubs becomes as complex and time taking as the real
 module.
 In some cases, Stub module may turn out to be bigger than stimulated module.
 
\end_layout

\begin_layout Standard
Drivers, instead, are the dummy programs which are used to call the functions
 of the lowest module in case when the calling function does not exists.
\end_layout

\begin_layout Subsection
Sequence of Component/Function Integration
\end_layout

\begin_layout Standard
This section is strictly related to the integration testing strategy described
 in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Integration-Testing-Strategy"

\end_inset

.
 In this section is explained the sequence in which components need to be
 integrated and tested.
 
\end_layout

\begin_layout Standard
Since it's used a bottom up approach to integrate subsystems, it's important
 to define a precedence relationship between components.
 In this section a dotted arrow from component C to component C' means that
 component C depends on component C'.
 This means that component C' needs to be developed and integrated before
 C in a bottom-up approach.
\end_layout

\begin_layout Subsubsection
Software Integration Sequence
\end_layout

\begin_layout Standard
This subsection explains how subcomponents are integrated together in order
 to obtain higher level components defined in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Elements-to-be"

\end_inset

.
\end_layout

\begin_layout Subsubsection*
Data Model
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Data Model.png
	lyxscale 30
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Data Model
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Data Model depends on the DBMS and its schema.
 This component is one of the most important component of the software architect
ure since all other components rely on it in order to perform their tasks.
 .
 So the choice of starting from this component comes from the critical module
 first approach.
\end_layout

\begin_layout Standard
The Data model needs to use in a proper way the APIs provided by DBMS.
 The DBMS schema is designed in parallel with respect to the data model
 since they are highly inter-connected.
 
\end_layout

\begin_layout Standard
Test for the integration of the Data Model with the DBMS are not provided
 in this document since the interfaces of the data model may vary depending
 on the schema.
 Performing this integration testing is basically checking if the Data Model
 updates correctly the DBMS.
\end_layout

\begin_layout Subsubsection*
Car Communication
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Car Communication.png
	lyxscale 30
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Car Communication
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Car Communication is the most critical module, almost all components rely
 on it.
 Car proxy relies on the Data Model so the Data Model is the first component
 that needs to be developed (as before).
 The CarOS component depends on the Car Listener that is a subcomponent
 of the Ride Manager but for now it's a stub because the ride manager will
 be developed later.
 This is an exception of the bottom up approach but Car Listener at this
 moment is useless for the integration because it receives only callback
 from the car event.
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{Test}$
\end_inset

 
\begin_inset Formula $\mathbf{Case}$
\end_inset

: IT1 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Car-communication-subsystem"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Registration Functionality
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Registration Functionality.png
	lyxscale 20
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Registration Functionality
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Registration Functionality is a subcomponent independent from the previous
 subcomponents so it can be developed and integrated in parallel with respect
 to them.
 
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{Test}$
\end_inset

 
\begin_inset Formula $\mathbf{Case}$
\end_inset

: IT2 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Registration-functionality-subsy"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Ride Functionality
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Ride Functionality.png
	lyxscale 20
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Ride Functionality
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ride Functionality is the subcomponent that manages all the flow of the
 ride.
 It needs to be integrated with Payment Manager, Car Communication, Notification
 Manager and, of course, with the Data Model.
 In this integration there is the necessity to test the payment part, the
 unlock and lock calls and the notification to the user.
 At this level of integration the Notification Manager could be a stub since
 it's not an important component in order to test the ride flow.
 
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{Test}$
\end_inset

 
\begin_inset Formula $\mathbf{Case}$
\end_inset

: IT3 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Ride-functionality-subsystem"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Reservation Functionality
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Reservation Functionality.png
	lyxscale 30
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Reservation Functionality
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Reservation Manager and the Ride Manager needs to be integrated together
 because of the dependency between them.
 
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{Test}$
\end_inset

 
\begin_inset Formula $\mathbf{Case}$
\end_inset

: IT4 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Reservation-functionality-subsys"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Search Functionality
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Search Functionality.png
	lyxscale 30
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Search Functionality
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
In order to test the search functionality the Car Search Engine needs to
 be integrated with the Car Communication subcomponent.
 
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{Test}$
\end_inset

 
\begin_inset Formula $\mathbf{Case}$
\end_inset

: IT5 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Search-functionality-subsystem"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Notification Functionality
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Notification Manager.png
	lyxscale 30
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Notification Functionality
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
At this point all critical subcomponents have been integrated.
 The integration can proceed with the Notification Functionality.
 Since the client application could be not yet ready it can be a stub.
 The important test here is that the notification are correctly received
 by the Notification Receiver and that the response is received correctly
 by the Notification Manager.
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{Test}$
\end_inset

 
\begin_inset Formula $\mathbf{Case}$
\end_inset

: IT6 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Notification-functionality-subsystem"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Customer Communication
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Customer Communication.png
	lyxscale 30
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Customer Communication
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Customer Message Handler component depends only on Notification Functionalit
y and no other component depend on it.
 Like Monitoring Functionality component it can be integrated lastly following
 the critical Module First Approach.
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{Test}$
\end_inset

 
\begin_inset Formula $\mathbf{Case}$
\end_inset

: IT7 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Customer-communication-subsystem"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Monitoring Functionality
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Monitoring Functionality.png
	lyxscale 30
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Monitoring Functionality
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
No components depends on the Car Monitoring component so it can be integrated
 lastly.
 
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{Test}$
\end_inset

 
\begin_inset Formula $\mathbf{Case}$
\end_inset

: IT8 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Car-monitoring-subsystem"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Car Management Functionality
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Car Manager Functionality.png
	lyxscale 30
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Car Management Functionality
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Car management functionality is a backend-component necessary for administrators
 and operators, it's independent for the user-part of the system.
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{Test}$
\end_inset

 
\begin_inset Formula $\mathbf{Case}$
\end_inset

: IT9 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Car-management-subsystem"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Other Integrations
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Profile Manager.png
	lyxscale 30
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Profile Manager
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{Test}$
\end_inset

 
\begin_inset Formula $\mathbf{Case}$
\end_inset

: IT10 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Profile-manager"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Auth Manager.png
	lyxscale 30
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Authentication Manager
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{Test}$
\end_inset

 
\begin_inset Formula $\mathbf{Case}$
\end_inset

: IT11 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Authentication-manager"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Administrative Functionality Provider.png
	lyxscale 30
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Administrative Functionality Provider
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{Test}$
\end_inset

 
\begin_inset Formula $\mathbf{Case}$
\end_inset

: IT12 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Administrative-functionality-pro"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Subsystem Integration Sequence
\end_layout

\begin_layout Standard
In this part for simplicity the server part is divided into three main component
s: the User-part, the Administrative-part and the Operator-part.
\end_layout

\begin_layout Standard
The components share some subcomponents between them.
\end_layout

\begin_layout Standard
The 
\begin_inset Formula $\mathbf{User-part}$
\end_inset

 is made of the following components:
\end_layout

\begin_layout Itemize
Ride Functionality
\end_layout

\begin_layout Itemize
Registration Functionality
\end_layout

\begin_layout Itemize
Reservation Functionality
\end_layout

\begin_layout Itemize
Search Functionality
\end_layout

\begin_layout Itemize
Notification Functionality
\end_layout

\begin_layout Itemize
Customer Communication
\end_layout

\begin_layout Itemize
Profile Manager
\end_layout

\begin_layout Itemize
Authentication Manager
\end_layout

\begin_layout Standard
The 
\begin_inset Formula $\mathbf{Administrative-part}$
\end_inset

 of the system is made of the following components:
\end_layout

\begin_layout Itemize
Administrative Functionality Provider
\end_layout

\begin_layout Itemize
Car Manager Functionality
\end_layout

\begin_layout Itemize
Monitoring Functionality
\end_layout

\begin_layout Itemize
Authentication Manager
\end_layout

\begin_layout Standard
The 
\begin_inset Formula $\mathbf{Operator-part}$
\end_inset

 of the system is made the following components:
\end_layout

\begin_layout Itemize
Car Manager Functionality
\end_layout

\begin_layout Itemize
Monitoring Functionality
\end_layout

\begin_layout Itemize
Notification Functionality
\end_layout

\begin_layout Itemize
Search Functionality
\end_layout

\begin_layout Itemize
Authentication Manager
\end_layout

\begin_layout Standard
At this point the client applications of the Users, Operators and Administrators
 need to be integrated with the relative parts of the system.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Subsystems.png
	lyxscale 30
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Subsystems Integration
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
