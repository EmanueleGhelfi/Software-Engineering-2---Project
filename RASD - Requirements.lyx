#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\master RASD.lyx
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref section
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Requirements
\end_layout

\begin_layout Standard
In order to satisfy goals in section [Section Goals] under domain assumptions
 in Section [Section domain Assumption] we've derived requirements for our
 system.
\end_layout

\begin_layout Itemize
[G1] Registration of a GUEST to the System:
\end_layout

\begin_deeper
\begin_layout Itemize
[R1] The system shall provide Sign Up functionality.
\end_layout

\begin_layout Itemize
[R2] The system shall send the password to the email provided by the user.
\end_layout

\begin_layout Itemize
[R3] The system shall require user's credit card.
\end_layout

\begin_layout Itemize
[R4] The system shall require user's driving license information.
\end_layout

\end_deeper
\begin_layout Itemize
[G2] Login of a registered USER:
\end_layout

\begin_deeper
\begin_layout Itemize
[R
\end_layout

\end_deeper
\begin_layout Itemize
[G2] Searching for cars near a selected position:
\end_layout

\begin_deeper
\begin_layout Itemize
[R5] The system shall provide the closest cars to position provided by the
 USER.
\end_layout

\begin_layout Itemize
[R6
\begin_inset CommandInset label
LatexCommand label
name "[R6]"

\end_inset

] The system shall be able to detect cars' position.
\end_layout

\end_deeper
\begin_layout Itemize
[G3] Searching for cars near USER's position:
\end_layout

\begin_deeper
\begin_layout Itemize
[R7] The system shall provide the closest cars to USER's position.
\end_layout

\begin_layout Itemize
[R8] The system shall be able to detect USER's position according to GPS.
\end_layout

\begin_layout Itemize
[R6]
\begin_inset CommandInset ref
LatexCommand eqref
reference "[R6]"

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
[G4] Reservation of a car:
\end_layout

\begin_deeper
\begin_layout Itemize
[R9] The system can modify car's state (available, occupied).
\end_layout

\begin_layout Itemize
[R10] The system shall reserve a car only if the car is available.
 
\end_layout

\begin_layout Itemize
[R11] The system shall reserve a car only if the user hasn't already reserved
 another car.
\end_layout

\begin_layout Itemize
[R12] The system shall be able to associate a car to the USER who has reserved
 it.
 
\end_layout

\end_deeper
\begin_layout Itemize
[G5] USER must be sanctioned if he doesn't pick up the car within one hour
 from reservation: 
\end_layout

\begin_deeper
\begin_layout Itemize
[R13] The system shall be able to charge USER by his payment method.
\end_layout

\end_deeper
\begin_layout Itemize
[G6] Car reservation expires after one hour if the user does not pick it
 up:
\end_layout

\begin_deeper
\begin_layout Itemize
[R9] 
\end_layout

\end_deeper
\begin_layout Itemize
[G7] USER that has reserved a car can unlock it if he's suffiently closed
 to it:
\end_layout

\begin_deeper
\begin_layout Itemize
[R14] The System shall be able to manage machine hardware communicating
 with car.
\end_layout

\end_deeper
\begin_layout Itemize
[G8] USER must be aware, during the ride, of how much he's going to pay:
\end_layout

\begin_deeper
\begin_layout Itemize
[R15] Car provide a way to show ride's price (is this a domain assumption?)
\end_layout

\begin_layout Itemize
[R16] System shall be able to compute ride's cost according to information
 received from the car.
\end_layout

\end_deeper
\begin_layout Subsection
Functional Requirements
\end_layout

\begin_layout Standard
After having defined main features of our system we can identify some functional
 requirements grouped under each defined actor:
\end_layout

\begin_layout Itemize
GUEST, he can:
\end_layout

\begin_deeper
\begin_layout Itemize
Sign up.
\end_layout

\begin_layout Itemize
Viewing cars' map.
\end_layout

\end_deeper
\begin_layout Itemize
USER, he can:
\end_layout

\begin_deeper
\begin_layout Itemize
Log in.
\end_layout

\begin_layout Itemize
Reserve car.
\end_layout

\begin_layout Itemize
Use a reserved car (unlocking it).
\end_layout

\begin_layout Itemize
View his profile (also his discounts).
\end_layout

\begin_layout Itemize
Modify his profile.
\end_layout

\begin_layout Itemize
View his recent movement.
\end_layout

\begin_layout Itemize
Search car near to his location.
\end_layout

\begin_layout Itemize
Search car near a selected location.
\end_layout

\end_deeper
\begin_layout Itemize
OPERATOR, he can:
\end_layout

\begin_deeper
\begin_layout Itemize
View car's status (battery and location).
\end_layout

\begin_layout Itemize
Set a car as available or under maintainance.
\end_layout

\end_deeper
\begin_layout Subsection
Non-functional Requirements
\end_layout

\begin_layout Subsubsection
User Interface
\end_layout

\begin_layout Standard
In order to make PowerEnJoy available for many people as possible we need
 to develop a Cross-Platform application with a Framework like Xamarin.
 In this way we can develop a single application and deploy it for Windows
 Phone, Android and iOS.
 We have also to develop a Web Application in order to allow also people
 to use our system in many way as possible.
\end_layout

\end_body
\end_document
